# coding: utf-8

"""
    Cosmo Tech Platform API

    Cosmo Tech Platform API

    The version of the OpenAPI document: 5.0.0-beta3
    Contact: platform@cosmotech.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cosmotech_api.models.run_template import RunTemplate

class TestRunTemplate(unittest.TestCase):
    """RunTemplate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RunTemplate:
        """Test RunTemplate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RunTemplate`
        """
        model = RunTemplate()
        if include_optional:
            return RunTemplate(
                id = 'template-123',
                name = '0',
                labels = {
                    'key' : ''
                    },
                description = '',
                tags = [
                    ''
                    ],
                compute_size = '',
                run_sizing = cosmotech_api.models.run_template_resource_sizing.RunTemplateResourceSizing(
                    requests = cosmotech_api.models.resource_size_info.ResourceSizeInfo(
                        cpu = '', 
                        memory = '', ), 
                    limits = cosmotech_api.models.resource_size_info.ResourceSizeInfo(
                        cpu = '', 
                        memory = '', ), ),
                parameter_groups = [
                    ''
                    ],
                execution_timeout = 56
            )
        else:
            return RunTemplate(
                id = 'template-123',
                parameter_groups = [
                    ''
                    ],
        )
        """

    def testRunTemplate(self):
        """Test RunTemplate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
