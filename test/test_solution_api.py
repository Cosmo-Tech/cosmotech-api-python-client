# coding: utf-8

"""
    Cosmo Tech Platform API

    Cosmo Tech Platform API

    The version of the OpenAPI document: 4.0.1-SNAPSHOT
    Contact: platform@cosmotech.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cosmotech_api.api.solution_api import SolutionApi


class TestSolutionApi(unittest.TestCase):
    """SolutionApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SolutionApi()

    def tearDown(self) -> None:
        pass

    def test_create_solution(self) -> None:
        """Test case for create_solution

        Create a new solution
        """
        pass

    def test_create_solution_access_control(self) -> None:
        """Test case for create_solution_access_control

        Create solution access control
        """
        pass

    def test_delete_solution(self) -> None:
        """Test case for delete_solution

        Delete a solution
        """
        pass

    def test_delete_solution_access_control(self) -> None:
        """Test case for delete_solution_access_control

        Delete solution access control
        """
        pass

    def test_delete_solution_parameter_groups(self) -> None:
        """Test case for delete_solution_parameter_groups

        Delete all parameter groups from the solution
        """
        pass

    def test_delete_solution_parameters(self) -> None:
        """Test case for delete_solution_parameters

        Delete all parameters from the solution
        """
        pass

    def test_delete_solution_run_template(self) -> None:
        """Test case for delete_solution_run_template

        Delete a specific run template
        """
        pass

    def test_delete_solution_run_templates(self) -> None:
        """Test case for delete_solution_run_templates

        Delete all run templates from the solution
        """
        pass

    def test_get_solution(self) -> None:
        """Test case for get_solution

        Get the details of a solution
        """
        pass

    def test_get_solution_access_control(self) -> None:
        """Test case for get_solution_access_control

        Get solution access control
        """
        pass

    def test_get_solution_security(self) -> None:
        """Test case for get_solution_security

        Get solution security information
        """
        pass

    def test_list_solution_security_users(self) -> None:
        """Test case for list_solution_security_users

        List solution security users
        """
        pass

    def test_list_solutions(self) -> None:
        """Test case for list_solutions

        List all Solutions
        """
        pass

    def test_update_solution(self) -> None:
        """Test case for update_solution

        Update a solution
        """
        pass

    def test_update_solution_access_control(self) -> None:
        """Test case for update_solution_access_control

        Update solution access control
        """
        pass

    def test_update_solution_default_security(self) -> None:
        """Test case for update_solution_default_security

        Update solution default security
        """
        pass

    def test_update_solution_parameter_groups(self) -> None:
        """Test case for update_solution_parameter_groups

        Update solution parameter groups
        """
        pass

    def test_update_solution_parameters(self) -> None:
        """Test case for update_solution_parameters

        Update solution parameters
        """
        pass

    def test_update_solution_run_template(self) -> None:
        """Test case for update_solution_run_template

        Update a specific run template
        """
        pass

    def test_update_solution_run_templates(self) -> None:
        """Test case for update_solution_run_templates

        Update solution run templates
        """
        pass


if __name__ == '__main__':
    unittest.main()
