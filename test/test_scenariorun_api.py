# coding: utf-8

"""
    Cosmo Tech Platform API

    Cosmo Tech Platform API

    The version of the OpenAPI document: 3.1.1-SNAPSHOT
    Contact: platform@cosmotech.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cosmotech_api.api.scenariorun_api import ScenariorunApi


class TestScenariorunApi(unittest.TestCase):
    """ScenariorunApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ScenariorunApi()

    def tearDown(self) -> None:
        pass

    def test_delete_historical_data_organization(self) -> None:
        """Test case for delete_historical_data_organization

        Delete all historical ScenarioRuns in the Organization
        """
        pass

    def test_delete_historical_data_scenario(self) -> None:
        """Test case for delete_historical_data_scenario

        Delete all historical ScenarioRuns in the Scenario
        """
        pass

    def test_delete_historical_data_workspace(self) -> None:
        """Test case for delete_historical_data_workspace

        Delete all historical ScenarioRuns in the Workspace
        """
        pass

    def test_delete_scenario_run(self) -> None:
        """Test case for delete_scenario_run

        Delete a scenariorun
        """
        pass

    def test_find_scenario_run_by_id(self) -> None:
        """Test case for find_scenario_run_by_id

        Get the details of a scenariorun
        """
        pass

    def test_get_scenario_run_cumulated_logs(self) -> None:
        """Test case for get_scenario_run_cumulated_logs

        Get the cumulated logs of a scenariorun
        """
        pass

    def test_get_scenario_run_logs(self) -> None:
        """Test case for get_scenario_run_logs

        get the logs for the ScenarioRun
        """
        pass

    def test_get_scenario_run_status(self) -> None:
        """Test case for get_scenario_run_status

        get the status for the ScenarioRun
        """
        pass

    def test_get_scenario_runs(self) -> None:
        """Test case for get_scenario_runs

        get the list of ScenarioRuns for the Scenario
        """
        pass

    def test_get_workspace_scenario_runs(self) -> None:
        """Test case for get_workspace_scenario_runs

        get the list of ScenarioRuns for the Workspace
        """
        pass

    def test_run_scenario(self) -> None:
        """Test case for run_scenario

        run a ScenarioRun for the Scenario
        """
        pass

    def test_search_scenario_runs(self) -> None:
        """Test case for search_scenario_runs

        Search ScenarioRuns
        """
        pass

    def test_start_scenario_run_containers(self) -> None:
        """Test case for start_scenario_run_containers

        Start a new scenariorun with raw containers definition
        """
        pass

    def test_stop_scenario_run(self) -> None:
        """Test case for stop_scenario_run

        stop a ScenarioRun for the Scenario
        """
        pass


if __name__ == '__main__':
    unittest.main()
