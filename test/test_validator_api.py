# coding: utf-8

"""
    Cosmo Tech Platform API

    Cosmo Tech Platform API

    The version of the OpenAPI document: 3.1.1-SNAPSHOT
    Contact: platform@cosmotech.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cosmotech_api.api.validator_api import ValidatorApi


class TestValidatorApi(unittest.TestCase):
    """ValidatorApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ValidatorApi()

    def tearDown(self) -> None:
        pass

    def test_create_validator(self) -> None:
        """Test case for create_validator

        Register a new validator
        """
        pass

    def test_create_validator_run(self) -> None:
        """Test case for create_validator_run

        Register a new validator run
        """
        pass

    def test_delete_validator(self) -> None:
        """Test case for delete_validator

        Delete a validator
        """
        pass

    def test_delete_validator_run(self) -> None:
        """Test case for delete_validator_run

        Delete a validator run
        """
        pass

    def test_find_all_validator_runs(self) -> None:
        """Test case for find_all_validator_runs

        List all Validator Runs
        """
        pass

    def test_find_all_validators(self) -> None:
        """Test case for find_all_validators

        List all Validators
        """
        pass

    def test_find_validator_by_id(self) -> None:
        """Test case for find_validator_by_id

        Get the details of a validator
        """
        pass

    def test_find_validator_run_by_id(self) -> None:
        """Test case for find_validator_run_by_id

        Get the details of a validator run
        """
        pass

    def test_run_validator(self) -> None:
        """Test case for run_validator

        Run a Validator
        """
        pass


if __name__ == '__main__':
    unittest.main()
