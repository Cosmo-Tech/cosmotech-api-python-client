# coding: utf-8

"""
    Cosmo Tech Platform API

    Cosmo Tech Platform API

    The version of the OpenAPI document: 4.0.1-SNAPSHOT
    Contact: platform@cosmotech.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cosmotech_api.models.runner_update_request import RunnerUpdateRequest

class TestRunnerUpdateRequest(unittest.TestCase):
    """RunnerUpdateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RunnerUpdateRequest:
        """Test RunnerUpdateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RunnerUpdateRequest`
        """
        model = RunnerUpdateRequest()
        if include_optional:
            return RunnerUpdateRequest(
                name = '0',
                description = '',
                tags = [
                    ''
                    ],
                run_template_id = '0',
                dataset_list = [
                    ''
                    ],
                run_sizing = cosmotech_api.models.runner_resource_sizing.RunnerResourceSizing(
                    requests = cosmotech_api.models.resource_size_info.ResourceSizeInfo(
                        cpu = '', 
                        memory = '', ), 
                    limits = cosmotech_api.models.resource_size_info.ResourceSizeInfo(
                        cpu = '', 
                        memory = '', ), ),
                parameters_values = [
                    cosmotech_api.models.runner_run_template_parameter_value.RunnerRunTemplateParameterValue(
                        parameter_id = '', 
                        var_type = '', 
                        value = '', 
                        is_inherited = True, )
                    ],
                owner_name = '0',
                solution_name = '0',
                run_template_name = '0'
            )
        else:
            return RunnerUpdateRequest(
        )
        """

    def testRunnerUpdateRequest(self):
        """Test RunnerUpdateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
