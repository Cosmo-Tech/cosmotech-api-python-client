# coding: utf-8

"""
    Cosmo Tech Platform API

    Cosmo Tech Platform API

    The version of the OpenAPI document: 4.0.1-SNAPSHOT
    Contact: platform@cosmotech.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cosmotech_api.models.solution_update_request import SolutionUpdateRequest

class TestSolutionUpdateRequest(unittest.TestCase):
    """SolutionUpdateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SolutionUpdateRequest:
        """Test SolutionUpdateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SolutionUpdateRequest`
        """
        model = SolutionUpdateRequest()
        if include_optional:
            return SolutionUpdateRequest(
                key = 'brewery-solution',
                name = 'Brewery Solution',
                description = 'A solution for brewery management and optimization',
                repository = 'cosmotech/brewery_solution',
                always_pull = True,
                csm_simulator = 'brewery_simulator',
                version = '1.0.0',
                sdk_version = '2.4',
                url = 'https://github.com/Cosmo-Tech/brewery-solution',
                tags = ["brewery","optimization"]
            )
        else:
            return SolutionUpdateRequest(
        )
        """

    def testSolutionUpdateRequest(self):
        """Test SolutionUpdateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
